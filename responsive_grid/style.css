/* let's create CSS Variables */
:root {
	--primary: #ddd;
    --dark: #333;
    --light: #fff;
    --shadow: 0 1px 5px rgba(104, 104, 104, 0.8);
}

html{
	box-sizing: border-box;
	/* padding won't effect the width of element*/

	font-family: sans-serif;
	color: var(--dark);
}

body{
	background: #ccc;
	margin: 30px 50px;
	/* 30 top bottom and 50 left right*/
	/* margin <border< padding < content */
	line-height: 1.4;
}

.btn{
	background-color: var(--dark);
	color: var(--light);
	padding: 0.6rem 1.3rem;
	/* 1rem = 16px */
	text-decoration: none;
	border:0;

}

img{
	max-width: 100%;
	
}

.wrapper{
	display: grid;
	grid-gap: 20px;
	/* gap between grids*/
}

.nav-bar ul{
	display: grid;
	grid-gap: 20px;
	padding: 0;
	list-style: none;
	grid-template-columns: repeat(4, 1fr);
}

.nav-bar a{
	background-color: var(--primary);
	display: block;
	/* will take up the full space of grid*/
	text-decoration: none;
	padding: 0.8rem;
	text-align: center;
	color: var(--dark);
	text-transform: uppercase;
	font-size: 19px; /*1.1rem*/
	box-shadow: var(--shadow);
}

.nav-bar a:hover{
	background-color: var(--dark);
	color: var(--light);
}

/* Top container */

.top-container{
	display: grid;
	grid-gap: 20px;
	grid-template-areas: 
	'showcase showcase top-box-a' 
	'showcase showcase top-box-b';
	/* this way we have alotted showcase area of the size of two columns*/
}

/* showcase */

.showcase{
	grid-area: showcase;
	/* we are assign value to grid area which will dictate grid-area-template what showcase is which is occupying 2 grid spaces*/
    min-height: 400px;
    background-image: url(me.jpg);
    background-size: cover;
    background-position: center;
    padding: 3rem; /* 16*3*/
    display: flex;
    flex-direction: column;
    /* flex items in column*/
    align-items: start;
    /* align items at the start*/
    justify-content: center;
    box-shadow: var(--shadow);
}

.showcase h1{
	font-size: 4rem;
	margin-bottom: 0;
	color: var(--light);
}

.showcase p{
	font-size: 1.3rem;
	margin-top: 0;
	color: var(--light);
}

/* top box styling */

.top-box{
	background-color: var(--primary);
	display: grid;
	align-items: center;
	justify-content: center;
	box-shadow: var(--shadow);
	padding: 1.5rem;
}

.top-box p{
	font-size: 2.1rem;
}
.top-box-a{
	grid-area: top-box-a;
}

.top-box-b{
	grid-area: top-box-b;
}

/* boxes */
.boxes{
	display: grid;
	grid-gap: 20px;
	grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
	/*setting the min max size and auto fitting the width of browser*/
	align-items: center;
	}

.box{
	background-color: var(--primary);
	align-items: center;
	padding: 1.5rem 2rem;
	box-shadow: var(--shadow);
}

/*info*/
.info{
	background-image: var(--primary);
	box-shadow: var(--shadow);
	display: grid;
	grid-gap: 30px;
	grid-template-columns: repeat(2, 1fr);
	padding: 3rem;
}


/* Media queries*/

@media (max-width: 700px) {

   .top-container{
   	grid-template-areas: 
   	'showcase showcase'
   	'top-box-a top-box-b';
   }

   .showcase h1{
   	font-size: 2.5rem; 
   }

   .nav-bar ul{

	grid-template-columns: 1fr;
   }

   .info{
   	grid-template-columns: 1fr;
   }


} 
